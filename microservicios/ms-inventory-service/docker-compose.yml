services:
  inventory-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: acme/inventory-service:latest
    container_name: inventory-app
    depends_on:
      inventory-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://inventory-db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      SERVER_PORT: "8081"

      SPRING_FLYWAY_DEFAULT_SCHEMA: inventory
      SPRING_FLYWAY_SCHEMAS: inventory
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history_inventory

      # Cliente hacia Products (si corre en el mismo Compose/red)
      INVENTORY_PRODUCTS_BASE_URL: http://products-app:8080
      INVENTORY_PRODUCTS_API_KEY_HEADER: X-API-KEY
      INVENTORY_PRODUCTS_API_KEY: products-secret

    ports:
      - "8081:8081"

  inventory-db:
    image: postgres:15-alpine
    container_name: inventory-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 20s
      retries: 5
    ports:
      - "5434:5432"
    volumes:
      - pgdata_inventory:/var/lib/postgresql/data

volumes:
  pgdata_inventory:
